<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.harry</groupId>
	<artifactId>dataflow</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>harry-dataflow</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>2020.0.4</spring-cloud.version>
		<docker.image.prefix>192.168.72.128:8015/library</docker.image.prefix>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.11</version>
			<scope>runtime</scope>
		</dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-task</artifactId>
		</dependency>
    </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>

				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>2.6.0</version>
				<configuration>
					<!-- 拉取所需的基础镜像 - 这里的jdk8，是用于运行springboot项目 -->
					<from>
						<image>openjdk:8-jdk-alpine</image>
					</from>
					<!-- 最后生成的镜像配置 -->
					<to>
						<!-- push docer-hub官方仓库。用户名/镜像名：版本号 -->
						<image>${docker.image.prefix}/${project.name}</image>
						<!-- 如果是阿里云的容器镜像仓库，则使用容器的配置 前缀/命名空间/仓库名 -->
						<!--<image>registry.cn-chengdu.aliyuncs.com/renbaojia/ctfo</image>-->
						<tags>
							<!--版本号-->
							<tag>${project.version}</tag>
						</tags>
						<auth>
							<!--在docker-hub或者阿里云上的账号和密码-->
							<username>admin</username>
							<password>Harbor12345</password>
						</auth>
					</to>
					<container>
						<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
						<ports>
							<!-- 指定镜像端口 -->
							<port>8082</port>
						</ports>
						<jvmFlags>
							<jvmFlag>-Duser.timezone=GMT+08</jvmFlag>
							<jvmFlag>-Dfile.encoding=utf-8</jvmFlag>
							<jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
							<jvmFlag>-XX:+UnlockExperimentalVMOptions</jvmFlag>
							<jvmFlag>-XX:+UseCGroupMemoryLimitForHeap</jvmFlag>
						</jvmFlags>
					</container>
					<allowInsecureRegistries>true</allowInsecureRegistries>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
